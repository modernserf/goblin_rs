let x := 1
let y := x + -1
let a := x{+: y}{-}

let obj := [
  on {foo} 1
  on {bar: x} x + 2
  on {a: a b: var b} a + b
]

var v := 123
set v := 456
obj{a: 1 b: var v}

let obj := [
  on {do var let on}
    self{bar: 1}
    return
  on {bar: x}
    return x
]
obj{do var let on}

import foo := "native"
let frame := [x]
let [x: x y: y1] := [x: 1 y: 2]
x + y1
let empty := []