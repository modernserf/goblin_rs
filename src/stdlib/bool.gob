export let Bool := [
  on {true} [
    on {: do f}
      f{true}
    on {true: t false: f}
      t
    on {!}
      Bool{false}
    on {&&: other}
      other{true: Bool{true} false: Bool{false}}
    on {||: other}
      other{true: Bool{true} false: Bool{true}}
    on {^^: other}
      other{true: Bool{false} false: Bool{true}}
    on {=: other}
      other{true: Bool{true} false: Bool{false}}
    on {!=: other}
      !(self = other)
  ]
  on {false} [
    on {: do f}
      f{false}
    on {true: t false: f}
      f
    on {!}
      Bool{true}
    on {&&: other}
      other{true: Bool{false} false: Bool{false}}
    on {||: other}
      other{true: Bool{true} false: Bool{false}}
    on {^^: other}
      other{true: Bool{true} false: Bool{false}}
    on {=: other}
      other{true: Bool{false} false: Bool{true}}
    on {!=: other}
      !(self = other)
  ]
]

export let [_true_ _false_] := Bool
