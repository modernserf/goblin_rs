import native := "native"

export let Assert := [
  on {expected: e received: r}
    native{expected: e received: r}
  on {: value}
    native{expected: true received: value}
]

export let String := [
  on {from char code: code}
    native{string from char code: code}
  on {newline} 
    native{string from char code: 10}
  on {tab} 
    native{string from char code: 9}
]

export let File := [
  on {read text sync: path}
    native{read text sync: path}
]

export let BigInt := [
  on {: value}
    native{BigInt: value}
]

export import [_Ord_] := "core/ord"
export import [_Option_] := "core/option"
export import [_Result_] := "core/result"
export import [_Control_] := "core/control"
export import [_Iter_] := "core/iter"
export import [_Sortable_] := "core/sortable"
export import [_Slice_] := "core/slice"
