import native := "native"

export let Control := [
  on {loop: do f}
    native{loop: f}
  on {times: times do: do f}
    var i := 0
    native{loop: {}
      if i = times then return end
      f{: i} ? f{}
      set i + 1
    }
  # this is maybe a bit too clever
  on {: do f}
    native{loop: {}
      f{while}{:
        on {true} f{do: ()} ? f{do}
        on {false} return
        on {some: value} f
        {do: value} ? f{do}
        on {none} return 
        on {ok: value} f{do: value} ? f{do}
        on {error: err} return err
      }
    }
]