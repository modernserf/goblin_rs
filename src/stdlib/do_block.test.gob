import [_Assert_ _Log_] := "core"

let obj := [
  on {send: do f}
    f{x}
]

let result := [{}
  obj{send: 
    on {x} 1
  }
]{}
Assert{: result = 1}

let result := [{}
  obj{send: [
    on {x} 
      return 1
  ]}
  2
]{}
Assert{: result = 2}

let result := [{}
  obj{send: 
    on {x}
      return 1
  }
  2
]{}
Assert{: result = 1}

let result := [{}
  obj{send: 
    on {x}
      if 1 = 1 then 
        return 1 
      end
  }
  2
]{}
Assert{: result = 1}



Assert{panics: [{}
  let obj := [
    on {send: f}
      f{x}
  ]
  obj{send: 
    on {x} 1
  }
]}


let obj := [
  on {some: value} [
    on {some!} value
    on {: do f} f{some: value}
    on {=: other} 
      other{:
        on {some: x} 
          x = value
        else false
      }
    on {!=: other}
      !(self = other)
  ]
]

Assert{: obj{some: 1} != obj{some: 3}}