import [_Ord_] := "core/ord"
import [_Option_] := "core/option"

export let Result := [
  on {ok: value} [
    on {: do f} f{ok: value}
    on {ok!} value
    # no {error!}
    on {is ok} true
    on {is error} false
    on {map: do f} Result{ok: f{: value}}
    on {map error: do f} self
    on {chain: do f} f{: value}
    on {chain error: do f} self
    on {ok or: default} value
    on {error or: default} default
    on {ok or do: do f} value
    on {error or do: do f} f{: value}
    on {to Option} Option{some: value}
  ]

  on {error: err} [
    on {: do f} f{error: err}
    # no {ok!}
    on {error!} err
    on {is ok} false
    on {is error} true
    on {map: do f} self
    on {map error: do f} Result{error: f{: err}}
    on {chain: do f} self
    on {chain error: do f} f{: err}
    on {ok or: default} default
    on {ok or do: do f} f{: err}
    on {error or: default} err
    on {error or do: do f} err
    on {to Option} Option{none}
  ]
]